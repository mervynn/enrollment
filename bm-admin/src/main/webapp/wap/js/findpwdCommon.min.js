function hasCookie() {
    navigator.cookieEnabled || toast("您的手机浏览器不支持或已经禁止使用cookie，无法正常登录，请开启或更换其他浏览器")
}
function mdUpdata(t) {
    try {
        var n = t,
            i = new MPing.inputs.Click(n);
        i.page_name = window.location.host + window.location.pathname, i.updateEventSeries();
        var e = new MPing;
        e.send(i)
    } catch (o) {}
}
function refreshAuth() {
    var t = "../../verify.shtml?v=" + Math.random();
    $("#imgCode").attr("src", t)
}
function checkInput() {
    var t = !0;
    return $(".acc-input").each(function() {
        return $(this).val() ? void 0 : (t = !1, !1)
    }), t
}
function checkNewPasswordForm(t) {
    var n = new RegExp("^.*([一-龥])+.*$", "g");
    if (n.test(t)) return toast("密码格式不正确，请重新设置"), !1;
    if (t.length < 6) return toast("密码长度不正确，请重新设置"), !1;
    if (t.length > 20) return toast("密码长度不正确，请重新设置"), !1;
    var i = /^.*([\W_])+.*$/i,
        e = /^.*([a-zA-Z])+.*$/i,
        o = /^.*([0-9])+.*$/i,
        s = 0;
    return t.length > 10 && s++, i.test(t) && s++, e.test(t) && s++, o.test(t) && s++, 1 >= s ? (toast("密码太弱，有被盗风险，请设置由多种字符组成的复杂密码"), !1) : !0
}
function timers(t) {
    var n = t || 120;
    $("#getMesCode").addClass("getMes-btn-disable").html("重新发送(" + n + "s)");
    var i = setInterval(function() {
        n--, 0 >= n ? (clearInterval(i), $("#getMesCode").removeClass("getMes-btn-disable").html("获取短信验证码")) : $("#getMesCode").html("重新发送" + n + "(s)")
    }, 1e3)
}
function toast(t) {
    setTimeout(function() {
        $(".toast").html(t), $(".toast-mask").show().addClass("maskfadeout")
    }, 100), clearTimeout(n);
    var n = setTimeout(function() {
        clearTimeout(n), $(".toast-mask").hide().removeClass("maskfadeout")
    }, 3e3);
    $(".toast-mask").on("click", function() {
        $(this).hide().removeClass("maskfadeout"), clearTimeout(n)
    })
}
hasCookie();
try {
    var pv = new MPing.inputs.PV,
        mping = new MPing;
    mping.send(pv)
} catch (e) {}
$(".J_ping").on("click", function() {
    var t = $(this).attr("report-eventid");
}), $(".icon-goback").on("click", function() {
    window.history.back()
}), refreshAuth(), $("#imgCode").on("click", function() {
    refreshAuth()
}), $(".acc-input").on("input", function() {
    $(this).siblings("i").show(), checkInput() ? $(".btn").addClass("btn-active") : $(".btn").removeClass("btn-active")
}), $(".icon-clear").on("click", function() {
    $(this).siblings("input").val("").focus(), $(this).hide(), $(".btn").removeClass("btn-active")
}), $(".acc-input").on("focus", function() {
    $(this).siblings("i").show()
}).on("blur", function() {
    var t = this;
    setTimeout(function() {
        $(t).siblings("i").hide()
    }, 200)
}), $(".label-checkbox").on("click", function() {
    var t = $(this).find("input").prop("checked");
    t ? $(this).siblings("input").attr("type", "password") : $(this).siblings("input").attr("type", "text"), $(this).find("input").prop("checked", !t)
});